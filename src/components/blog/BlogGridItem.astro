---
import { render } from "astro:content";
import Calendar from '@lucide/astro/icons/calendar';
import Clock from '@lucide/astro/icons/clock';
import type { Locale } from '@/i18n/constants';
import { useTranslations } from '@/i18n/helpers';
import type { PostEntry } from '@/types/Post';
import { formatShortDate } from '@/utils/date';
import Illustration from '../Illustration.astro';
import { cn } from "@/utils/cn";

interface Props {
  post: PostEntry;
}

const { post } = Astro.props;
const locale = post.lang as Locale;
const t = useTranslations(locale);
const { slug } = post;
const { title, description, date, hero, heroAlt, themeColor } = post.data;
const { remarkPluginFrontmatter } = await render(post);
const { readingTime } = remarkPluginFrontmatter;
---

<article class="blogGridItem" style={{ '--main-color': themeColor }}>
  <div class="content">
    <h3 class="title mb-2"><a href={`/${locale}/${slug}/`}>{title}</a></h3>
    <p class="description mb-3">{description}</p>
    <div class="flex flex-wrap gap-x-6 gap-y-3 text-sm">
      <time class="flex items-center" title={t('blog.pubDate')} datetime={date.toISOString()}><Calendar class="size-4 mr-3" />{formatShortDate(date, locale)}</time>
      <span class="flex items-center" title={t('blog.readingTime')}><Clock class="size-4 mr-3" />{readingTime} {t('blog.readingTime.read')}</span>
    </div>
  </div>
  <div class="relative size-20">
    {hero && ['img-blurred', 'img-main'].map(className => (
      <Illustration
        alt={heroAlt}
        class={cn("img", className)}
        src={hero}
        width="320"
        height="168"
        aria-hidden={className === 'img-blurred'}
      />
    ))}
  </div>
</article>

<style>
  @reference '@/styles/global.css';

  .blogGridItem {
    --primary: oklch(from var(--main-color) 0.56 calc(c * 0.85) h);
    [data-theme='dark'] & {
      --primary: oklch(from var(--main-color) 0.76 calc(c * 0.85) h);
    }

    @apply flex items-center p-4 gap-x-4 relative bg-primary/10 rounded-2xl;

    a {
      @apply text-primary hover:underline;
    }

    .img {
      @apply shrink-0 rounded-xl size-full object-cover motion-safe:transition-all duration-300;
    }

    .img-main {
      @apply shadow-[0_0.05rem_0.375rem_0_rgba(0,0,0,0.3)] shadow-primary/30 dark:shadow-black/30;

      .blogGridItem:has(a:hover:not(:active)) & {
        @apply translate-x-1 -translate-y-1;
      }
    }

    .img-blurred {
      @apply absolute top-0.5 -z-[1] contrast-150 saturate-200 opacity-60 blur-xs;

      .blogGridItem:has(a:hover:not(:active)) & {
        @apply blur-sm;
      }
    }

    picture {
      @apply shrink-0;

      &:has(img.img-blurred) {
        @apply absolute size-full;
      }
    }

    .content {
      @apply flex-1;
    }

    .title {
      @apply text-base line-clamp-2 text-pretty;
      a:before {
        @apply [content:''] block absolute inset-0 z-[1];
      }
    }

    .description {
      @apply text-sm line-clamp-1;
    }
  }
</style>
