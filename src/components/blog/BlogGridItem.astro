---
import Calendar from 'lucide-solid/icons/calendar';
import Clock from 'lucide-solid/icons/clock';
import type { PostEntry } from '@/types/Post';
import { formatShortDate } from '@/utils/date';
import { removeExtension } from '@/utils/files';

interface Props {
  post: PostEntry;
}

const { post } = Astro.props;
const { slug } = post;
const { title, description, date, image } = post.data;
const { remarkPluginFrontmatter } = await post.render();
const { readingTime } = remarkPluginFrontmatter;
---

<a href={`/blog/${slug}/`} class="blogGridItem">
  <div class="frame">
    {image && ['image', 'blurredImage'].map(className => (
      <div class={className}>
        {image.src.endsWith('.svg')
          ? <img
              alt={image.alt}
              loading="lazy"
              src={image.src}
              width="1080"
              height="567"
            />
          : <picture>
              <source srcset={removeExtension(image.src) + '-thumb.avif'} type="image/avif" />
              <img
                alt={image.alt}
                loading="lazy"
                src={removeExtension(image.src) + '-thumb.jpg'}
                width="320"
                height="168"
              />
            </picture>
        }
      </div>
    ))}
    <div class="content">
      <h3 class="title">{title}</h3>
      <p class="description">{description}</p>
      <div class="flex flex-wrap gap-4 text-foreground text-sm mt-1">
        <time class="flex items-center" title="Fecha de publicaciÃ³n" datetime={date.toISOString()}><Calendar class="size-4 mr-2" />{formatShortDate(date)}</time>
        <span class="flex items-center" title="Tiempo de lectura"><Clock class="size-4 mr-2" />{readingTime}</span>
      </div>
    </div>
  </div>
</a>

<style>
  .blogGridItem {
    --frame-height: 6.5rem;
    @apply relative overflow-hidden bg-primary/20 rounded-3xl shadow-center-lg shadow-primary/40 dark:shadow-black/40 p-1;

    .frame {
      @apply flex gap-x-1 rounded-[1.25rem] overflow-hidden;
    }

    .image {
      @apply shrink-0 overflow-hidden rounded-md max-sm:hidden;

      img {
        @apply size-[var(--frame-height)] object-cover bg-white/40 dark:bg-black/40 transform-gpu transition-transform;
      }
    }

    &:hover .image img {
      @apply scale-110;
    }

    .blurredImage {
      @apply absolute inset-0 -z-[1] brightness-200 dark:brightness-50;

      img {
        @apply size-full object-cover blur-xl opacity-80;
      }
    }

    .content {
      @apply px-4 bg-background rounded-md h-[var(--frame-height)] content-center;
    }

    .title {
      @apply text-base m-0 line-clamp-1;
    }

    .description {
      @apply line-clamp-1 text-foreground;
    }
  }
</style>
