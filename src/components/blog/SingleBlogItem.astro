---
import { Calendar, Clock, Tag } from "lucide-preact";
import type { PostEntry } from "~/types/Post";
import { formatShortDate } from "~/utils/date";
import ExternalLink from "../ExternalLink.astro";
import { removeExtension } from "~/utils/files";

interface Props {
  post: PostEntry;
}

const { post } = Astro.props;
const { title, description, date, tags, image, sources } = post.data;
const { Content, remarkPluginFrontmatter } = await post.render();
const { readingTime } = remarkPluginFrontmatter;
---
{image && (
  image.src.endsWith('.svg')
  ? <img
      alt={image.alt}
      class="w-full rounded-3xl mb-10"
      loading="eager"
      src={image.src}
      width="1080"
      height="567"
    />
  : <picture>
      <source srcset={removeExtension(image.src) + '.avif'} type="image/avif" />
      <source srcset={removeExtension(image.src) + '.webp'} type="image/webp" />
      <img
        alt={image.alt}
        class="w-full rounded-3xl mb-10"
        loading="eager"
        src={image.src}
        width="1080"
        height="567"
      />
    </picture>
)}
<h1 class="text-3xl leading-normal text-pretty">{title}</h1>
<h2 class="mb-6 text-xl font-normal text-pretty">{description}</h2>
<div class="flex flex-wrap gap-4 text-sm mb-6">
  <time class="flex items-center" title="Fecha de publicaciÃ³n" datetime={date.toISOString()}><Calendar class="size-4 mr-2" />{formatShortDate(date)}</time>
  <span class="flex items-center" title="Tiempo de lectura"><Clock class="size-4 mr-2" />{readingTime}</span>
  {tags.map(tag => <span class="flex items-center"><Tag class="size-4 mr-2" />{tag}</span>)}
</div>
<article class="mt-12 mb-6 rich-text">
  <Content />
  {sources.length > 0 && (
    <h2>Fuentes</h2>
    <ul>
      {sources.map(source => (
        <li><ExternalLink class="external" href={source.href}>{source.title}</ExternalLink></li>
      ))}
    </ul>
  )}
</article>