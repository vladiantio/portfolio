---
import BaselineIcon from './BaselineIcon.astro';
import BrowserSupport from './BrowserSupport.astro';
import { BASELINE_DEFS } from './constants';
import { getBaselineDate, getDescriptionDate, getFeature } from './lib';

interface Props {
	/**
	 * ID of the feature from https://github.com/web-platform-dx/web-features/
	 * e.g. `"anchor-positioning"`
	 */
	id: string;
}

const feature = await getFeature(Astro.props.id);

const baseline = feature.baseline.status || 'no_data';

const title = BASELINE_DEFS[baseline].title;
const baselineDate = getBaselineDate(feature);
const description = getDescriptionDate(baseline, baselineDate);
const year = baseline === 'newly' && baselineDate ? baselineDate.split(' ')[1]! : '';
---

<div class={`baseline-status baseline-status--${baseline}`}>
  <p class="feature-name">{feature.name}</p>
  <details>
    <summary>
      <BaselineIcon support={baseline} />
      <div class="summary-content">
        <div class="summary-label">
          {
            !(baseline === 'limited' || baseline === 'no_data') && (
              <strong>Baseline</strong>
            )
          }
          {title}
          {year}
          {
            baseline === 'newly' && (
              <span class="badge">newly available</span>
            )
          }
        </div>
        <div class="browsers">
          <BrowserSupport browser="chrome" {feature} />
          <BrowserSupport browser="edge" {feature} />
          <BrowserSupport browser="firefox" {feature} />
          <BrowserSupport browser="safari" {feature} />
        </div>
      </div>
      <span class="caret" aria-hidden="true">
        <svg width="11" height="7" fill="currentColor">
          <path d="M5.5 6.45.25 1.2l.94-.94L5.5 4.6 9.8.3l.95.94L5.5 6.45Z"
          ></path>
        </svg>
      </span>
    </summary>
    <p class="description" set:html={description} />
    {
      baseline !== 'no_data' && (
        <p>
          <a
            href={`https://webstatus.dev/features/${feature.feature_id}`}
            target="_top"
            class="link"
            set:text={`${feature.name} on Web Platform Status`}
          />
        </p>
      )
    }
  </details>
</div>

<style>
  .baseline-status {
    /* Light palette */
    --color-badge-background--light: #3367d6;
    --color-badge-text--light: #fff;
    --color-limited--light: #ea8600;
    --color-limited-secondary--light: #c6c6c6;
    --color-newly--light: #1a73e8;
    --color-newly-secondary--light: #a8c7fa;
    --color-widely--light: #1e8e3e;
    --color-widely-secondary--light: #c4eed0;
    --color-no_data--light: #707070;
    --color-no_data-secondary--light: #909090;
    /* Dark palette */
    --color-badge-background--dark: #3367d6;
    --color-badge-text--dark: #fff;
    --color-limited--dark: #f09418;
    --color-limited-secondary--dark: #565656;
    --color-newly--dark: #4185ff;
    --color-newly-secondary--dark: #2d509e;
    --color-widely--dark: #24a446;
    --color-widely-secondary--dark: #125225;
    --color-no_data--dark: #868686;
    --color-no_data-secondary--dark: #666666;

    /* Set up colors for light mode */
    --color-limited: var(--color-limited--light);
    --color-newly: var(--color-newly--light);
    --color-widely: var(--color-widely--light);
    --color-no_data: var(--color-no_data--light);
    --color-badge-background: var(--color-badge-background--light);
    --color-badge-text: var(--color-badge-text--light);
    --color-limited-secondary: var(--color-limited-secondary--light);
    --color-widely-secondary: var(--color-widely-secondary--light);
    --color-newly-secondary: var(--color-newly-secondary--light);
    --color-no_data-secondary: var(--color-no_data-secondary--light);

    border: solid 1px transparent;
    border-radius: 1.5rem;
    background: color-mix(in oklab, var(--body) 10%, transparent);
    padding-top: 1em;
    padding-top: 1lh;
    padding-inline: 1.5rem;
    font-size: 0.875rem;
    font-style: normal;
    margin-bottom: 1em;
    margin-bottom: 1lh;

    .dark & {
      /* Set up colors for dark mode */
      --color-limited: var(--color-limited--dark);
      --color-newly: var(--color-newly--dark);
      --color-widely: var(--color-widely--dark);
      --color-no_data: var(--color-no_data--dark);
      --color-badge-background: var(--color-badge-background--dark);
      --color-badge-text: var(--color-badge-text--dark);
      --color-limited-secondary: var(--color-limited-secondary--dark);
      --color-widely-secondary: var(--color-widely-secondary--dark);
      --color-newly-secondary: var(--color-newly-secondary--dark);
      --color-no_data-secondary: var(--color-no_data-secondary--dark);
    }

    @supports (--color: light-dark(var(--a), var(--b))) {
      & {
        /* Set up dynamic light/dark colors in supporting browsers. */
        --color-limited: light-dark(
          var(--color-limited--light),
          var(--color-limited--dark)
        );
        --color-newly: light-dark(
          var(--color-newly--light),
          var(--color-newly--dark)
        );
        --color-widely: light-dark(
          var(--color-widely--light),
          var(--color-widely--dark)
        );
        --color-no_data: light-dark(
          var(--color-no_data--light),
          var(--color-no_data--dark)
        );
        --color-badge-background: light-dark(
          var(--color-badge-background--light),
          var(--color-badge-background--dark)
        );
        --color-badge-text: light-dark(
          var(--color-badge-text--light),
          var(--color-badge-text--dark)
        );
        --color-limited-secondary: light-dark(
          var(--color-limited-secondary--light),
          var(--color-limited-secondary--dark)
        );
        --color-widely-secondary: light-dark(
          var(--color-widely-secondary--light),
          var(--color-widely-secondary--dark)
        );
        --color-newly-secondary: light-dark(
          var(--color-newly-secondary--light),
          var(--color-newly-secondary--dark)
        );
        --color-no_data-secondary: light-dark(
          var(--color-no_data-secondary--light),
          var(--color-no_data-secondary--dark)
        );
      }
    }

    svg {
      display: inline-block;
    }

    .feature-name {
      font-size: 1.25rem;
      line-height: calc(1.5 / 1.25);
      margin: 0;
    }

    .link,
    .link:active,
    .link:visited {
      color: var(--primary);
    }

    .link:hover {
      text-decoration: underline;
    }

    summary {
      display: flex;
      cursor: pointer;
      font-size: 1rem;
      line-height: calc(1.5 / 1);
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      justify-content: space-between;
      padding-block: 1em;
      padding-block: 1lh;
    }

    summary::-webkit-details-marker {
      display: none;
    }

    .summary-content {
      gap: 1rem;
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: center;
      flex: 1;
    }

    .summary-label {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 0.2rem;
    }

    .badge {
      background: var(--color-badge-background);
      color: var(--color-badge-text);
      font-size: 0.6875rem;
      line-height: calc(1.25 / 0.6875);
      padding-inline: 0.25rem;
      border-radius: 0.125rem;
      text-transform: uppercase;
      margin-inline: 0.5rem;
      white-space: nowrap;
    }

    .browsers {
      font-size: 0;
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
    }

    .browser-support {
      white-space: nowrap;
      display: flex;
      align-items: center;
    }
    .browser-support-label {
      position: absolute;
      width: 1px;
      height: 1px;
      margin: -1px;
    }

    .browser-icon {
      background: none;
      border-radius: 0;
      margin: 0;
      user-select: none;
      width: 21px;
      height: 21px;
    }

    .caret {
      width: 10px;
      height: 20px;
      margin-inline-start: auto;
      color: var(--text-color);
    }

    @media (min-width: 28rem) {
      .caret {
        margin-inline-start: 3rem;
      }
    }

    .caret svg {
      transition: rotate 0.3s;
    }
    details[open] .caret svg {
      rotate: 180deg;
    }

    .description {
      margin-top: 0;
    }
  }
</style>
